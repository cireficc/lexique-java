group 'com.cireficc'
version '1.0-SNAPSHOT'

apply plugin: 'java'

// Configuration for the build script. Building requires ActiveJDBC Instrumentation, so
// we include those dependencies
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.javalite:activejdbc:1.4.11'
        classpath 'org.javalite:activejdbc-instrumentation:1.4.11'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'org.xerial:sqlite-jdbc:3.8.11.1'
    compile 'org.javalite:activejdbc:1.4.11'
    compile 'org.javalite:activejdbc-instrumentation:1.4.11'
    compile 'org.apache.logging.log4j:log4j-api:2.3'
    compile 'org.apache.logging.log4j:log4j-core:2.3'
}

// Create a single Jar with all dependencies bundled
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Lexique',
                'Implementation-Version': version,
                'Main-Class': 'Main'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// Instrument models (http://stackoverflow.com/q/24899385/1986871)
task instrument(dependsOn: 'build', type: JavaExec) {
    main = 'org.javalite.instrumentation.Main'
    classpath = buildscript.configurations.classpath
    classpath += sourceSets.main.runtimeClasspath
    jvmArgs '-DoutputDirectory=' + sourceSets.main.output.classesDir.getPath()
}

compileJava.doLast {
    tasks.instrument.execute()
}